// Generated by view binder compiler. Do not edit!
package com.example.lyricsify.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageButton;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.Toolbar;
import androidx.cardview.widget.CardView;
import androidx.coordinatorlayout.widget.CoordinatorLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.lyricsify.R;
import com.google.android.material.button.MaterialButton;
import com.google.android.material.switchmaterial.SwitchMaterial;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityMainBinding implements ViewBinding {
  @NonNull
  private final CoordinatorLayout rootView;

  @NonNull
  public final SwitchMaterial adSwitch;

  @NonNull
  public final ImageView albumartimage;

  @NonNull
  public final CardView cardView;

  @NonNull
  public final CardView cardView1;

  @NonNull
  public final TextView isPlaying;

  @NonNull
  public final TextView lastUpdated;

  @NonNull
  public final LinearLayout mediaButtons;

  @NonNull
  public final MaterialButton mute;

  @NonNull
  public final ImageButton next;

  @NonNull
  public final MaterialButton openSpotify;

  @NonNull
  public final TextView outputTextLyrics;

  @NonNull
  public final ImageButton previous;

  @NonNull
  public final LinearLayout songInfoLayout;

  @NonNull
  public final TextView songInfoTextView;

  @NonNull
  public final ImageButton togglePlayPause;

  @NonNull
  public final Toolbar toolbar;

  @NonNull
  public final TextView track;

  @NonNull
  public final MaterialButton unMute;

  private ActivityMainBinding(@NonNull CoordinatorLayout rootView, @NonNull SwitchMaterial adSwitch,
      @NonNull ImageView albumartimage, @NonNull CardView cardView, @NonNull CardView cardView1,
      @NonNull TextView isPlaying, @NonNull TextView lastUpdated,
      @NonNull LinearLayout mediaButtons, @NonNull MaterialButton mute, @NonNull ImageButton next,
      @NonNull MaterialButton openSpotify, @NonNull TextView outputTextLyrics,
      @NonNull ImageButton previous, @NonNull LinearLayout songInfoLayout,
      @NonNull TextView songInfoTextView, @NonNull ImageButton togglePlayPause,
      @NonNull Toolbar toolbar, @NonNull TextView track, @NonNull MaterialButton unMute) {
    this.rootView = rootView;
    this.adSwitch = adSwitch;
    this.albumartimage = albumartimage;
    this.cardView = cardView;
    this.cardView1 = cardView1;
    this.isPlaying = isPlaying;
    this.lastUpdated = lastUpdated;
    this.mediaButtons = mediaButtons;
    this.mute = mute;
    this.next = next;
    this.openSpotify = openSpotify;
    this.outputTextLyrics = outputTextLyrics;
    this.previous = previous;
    this.songInfoLayout = songInfoLayout;
    this.songInfoTextView = songInfoTextView;
    this.togglePlayPause = togglePlayPause;
    this.toolbar = toolbar;
    this.track = track;
    this.unMute = unMute;
  }

  @Override
  @NonNull
  public CoordinatorLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityMainBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityMainBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_main, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityMainBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.adSwitch;
      SwitchMaterial adSwitch = ViewBindings.findChildViewById(rootView, id);
      if (adSwitch == null) {
        break missingId;
      }

      id = R.id.albumartimage;
      ImageView albumartimage = ViewBindings.findChildViewById(rootView, id);
      if (albumartimage == null) {
        break missingId;
      }

      id = R.id.cardView;
      CardView cardView = ViewBindings.findChildViewById(rootView, id);
      if (cardView == null) {
        break missingId;
      }

      id = R.id.cardView1;
      CardView cardView1 = ViewBindings.findChildViewById(rootView, id);
      if (cardView1 == null) {
        break missingId;
      }

      id = R.id.isPlaying;
      TextView isPlaying = ViewBindings.findChildViewById(rootView, id);
      if (isPlaying == null) {
        break missingId;
      }

      id = R.id.lastUpdated;
      TextView lastUpdated = ViewBindings.findChildViewById(rootView, id);
      if (lastUpdated == null) {
        break missingId;
      }

      id = R.id.mediaButtons;
      LinearLayout mediaButtons = ViewBindings.findChildViewById(rootView, id);
      if (mediaButtons == null) {
        break missingId;
      }

      id = R.id.mute;
      MaterialButton mute = ViewBindings.findChildViewById(rootView, id);
      if (mute == null) {
        break missingId;
      }

      id = R.id.next;
      ImageButton next = ViewBindings.findChildViewById(rootView, id);
      if (next == null) {
        break missingId;
      }

      id = R.id.openSpotify;
      MaterialButton openSpotify = ViewBindings.findChildViewById(rootView, id);
      if (openSpotify == null) {
        break missingId;
      }

      id = R.id.outputTextLyrics;
      TextView outputTextLyrics = ViewBindings.findChildViewById(rootView, id);
      if (outputTextLyrics == null) {
        break missingId;
      }

      id = R.id.previous;
      ImageButton previous = ViewBindings.findChildViewById(rootView, id);
      if (previous == null) {
        break missingId;
      }

      id = R.id.songInfoLayout;
      LinearLayout songInfoLayout = ViewBindings.findChildViewById(rootView, id);
      if (songInfoLayout == null) {
        break missingId;
      }

      id = R.id.songInfoTextView;
      TextView songInfoTextView = ViewBindings.findChildViewById(rootView, id);
      if (songInfoTextView == null) {
        break missingId;
      }

      id = R.id.togglePlayPause;
      ImageButton togglePlayPause = ViewBindings.findChildViewById(rootView, id);
      if (togglePlayPause == null) {
        break missingId;
      }

      id = R.id.toolbar;
      Toolbar toolbar = ViewBindings.findChildViewById(rootView, id);
      if (toolbar == null) {
        break missingId;
      }

      id = R.id.track;
      TextView track = ViewBindings.findChildViewById(rootView, id);
      if (track == null) {
        break missingId;
      }

      id = R.id.unMute;
      MaterialButton unMute = ViewBindings.findChildViewById(rootView, id);
      if (unMute == null) {
        break missingId;
      }

      return new ActivityMainBinding((CoordinatorLayout) rootView, adSwitch, albumartimage,
          cardView, cardView1, isPlaying, lastUpdated, mediaButtons, mute, next, openSpotify,
          outputTextLyrics, previous, songInfoLayout, songInfoTextView, togglePlayPause, toolbar,
          track, unMute);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
